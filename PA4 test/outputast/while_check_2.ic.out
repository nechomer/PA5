Parsed -Linput/Library/libic.sig successfully!
Parsed while_check_2.ic successfully!

Abstract Syntax Tree: -Linput/Library/libic.sig

1: Declaration of class: Library, Type: Library, Symbol table: Global
    2: Declaration of library method: println, Type: void
        2: Parameter: s, Type: string, Symbol table: println
    3: Declaration of library method: print, Type: void
        3: Parameter: s, Type: string, Symbol table: print
    4: Declaration of library method: printi, Type: void
        4: Parameter: i, Type: int, Symbol table: printi
    5: Declaration of library method: printb, Type: void
        5: Parameter: b, Type: boolean, Symbol table: printb
    7: Declaration of library method: readi, Type: int
    8: Declaration of library method: readln, Type: string
    9: Declaration of library method: eof, Type: boolean
    11: Declaration of library method: stoi, Type: int
        11: Parameter: s, Type: string, Symbol table: stoi
        11: Parameter: n, Type: int, Symbol table: stoi
    13: Declaration of library method: itos, Type: string
        13: Parameter: i, Type: int, Symbol table: itos
    14: Declaration of library method: stoa, Type: int[]
        14: Parameter: s, Type: string, Symbol table: stoa
    15: Declaration of library method: atos, Type: string
        15: Parameter: a, Type: int[], Symbol table: atos
    17: Declaration of library method: random, Type: int
        17: Parameter: n, Type: int, Symbol table: random
    18: Declaration of library method: time, Type: int
    19: Declaration of library method: exit, Type: int
        19: Parameter: i, Type: int, Symbol table: exit

Abstract Syntax Tree: input\while_check_2.ic

1: Declaration of class: A, Type: A, Symbol table: Global
    2: Declaration of static method: main, Type: {string[] -> void}, Symbol table: A
        2: Parameter: args, Type: string[], Symbol table: main
        4: Declaration of local variable: i, Type: int, Symbol table: main
        5: Declaration of local variable: j, Type: int, Symbol table: main
        7: While statement, Symbol table: main
            7: Logical binary operation: less than, Type: boolean, Symbol table: main
                7: Integer literal: 1, Type: int, Symbol table: main
                7: Integer literal: 2, Type: int, Symbol table: main
            7: Block of statements, Symbol table: main
                8: Break statement, Symbol table: statement block in main
        11: While statement, Symbol table: main
            11: Logical binary operation: less than, Type: boolean, Symbol table: main
                11: Reference to variable: i, Type: int, Symbol table: main
                11: Integer literal: 3, Type: int, Symbol table: main
            11: Block of statements, Symbol table: main
                12: Assignment statement, Symbol table: statement block in main
                    12: Reference to variable: j, Type: int, Symbol table: statement block in main
                    12: Integer literal: 0, Type: int, Symbol table: statement block in main
                13: While statement, Symbol table: statement block in main
                    13: Logical binary operation: less than, Type: boolean, Symbol table: statement block in main
                        13: Reference to variable: j, Type: int, Symbol table: statement block in main
                        13: Integer literal: 2, Type: int, Symbol table: statement block in main
                    13: Block of statements, Symbol table: statement block in main
                        14: Assignment statement, Symbol table: statement block in statement block in main
                            14: Reference to variable: j, Type: int, Symbol table: statement block in statement block in main
                            14: Mathematical binary operation: addition, Type: int, Symbol table: statement block in statement block in main
                                14: Reference to variable: j, Type: int, Symbol table: statement block in statement block in main
                                14: Integer literal: 1, Type: int, Symbol table: statement block in statement block in main
                        15: Method call statement
                          15: Call to static method: print, in class Library
                              15: String literal: "i is ", Type: string, Symbol table: statement block in statement block in main
                        16: Method call statement
                          16: Call to static method: printi, in class Library
                              16: Reference to variable: i, Type: int, Symbol table: statement block in statement block in main
                        17: Method call statement
                          17: Call to static method: println, in class Library
                              17: String literal: "", Type: string, Symbol table: statement block in statement block in main
                        18: Method call statement
                          18: Call to static method: print, in class Library
                              18: String literal: "j is ", Type: string, Symbol table: statement block in statement block in main
                        19: Method call statement
                          19: Call to static method: printi, in class Library
                              19: Reference to variable: j, Type: int, Symbol table: statement block in statement block in main
                        20: Method call statement
                          20: Call to static method: println, in class Library
                              20: String literal: "", Type: string, Symbol table: statement block in statement block in main
                22: Assignment statement, Symbol table: statement block in main
                    22: Reference to variable: i, Type: int, Symbol table: statement block in main
                    22: Mathematical binary operation: addition, Type: int, Symbol table: statement block in main
                        22: Reference to variable: i, Type: int, Symbol table: statement block in main
                        22: Integer literal: 1, Type: int, Symbol table: statement block in main
