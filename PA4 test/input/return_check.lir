str_err_null_ptr_ref:		"Runtime Error: Null pointer dereference!"
str_err_arr_out_of_bounds:	"Runtime Error: Array index out of bounds!"
str_err_neg_arr_size:	"Runtime Error: Array allocation with negative array size!"
str_err_div_by_zero:	"Runtime Error: Division by zero!"

# class ReturnCheck
# Dispatch vector:
_DV_ReturnCheck: [_ReturnCheck_checkRetFuncs, _ReturnCheck_retvoid, _ReturnCheck_retvobj, _ReturnCheck_retArr, _ReturnCheck_retArrLocation, _ReturnCheck_retThis, _ReturnCheck_retNewObjThis, _ReturnCheck_retNewObj, _ReturnCheck_retNewArr, _ReturnCheck_retArrLength, _ReturnCheck_retNegation, _ReturnCheck_retNegative, _ReturnCheck_retNull, _ReturnCheck_retIntCalling]
# Field offsets

# class C
# Dispatch vector:
_DV_C: [_C_retThis]
# Field offsets


# Check Null Ptr Reference:
# static void checkNullRef(array a){
# 	if(a == null) {Library.println(...);
# 	Library.exit(1);
# 	}
# }
__checkNullRef:
	Move a, R0
	Compare 0, R0
	JumpTrue _error1
	Return Rdummy
_error1:
	Library __println(str_err_null_ptr_ref),Rdummy
	Library __exit(1),Rdummy

# Check Array Index Out Of Bounds:
# static void checkArrayAccess(array a, index i) {
# 	if (i<0 || i>=a.length) {
# 	Library.println("Runtime Error");
# 	}
# }
__checkArrayAccess:
	Move i, R0
	Compare 0, R0
	JumpL _error2
	ArrayLength a, R0
	Compare i, R0
	JumpLE _error2	Return Rdummy
_error2:
	Library __println(str_err_arr_out_of_bounds),Rdummy
	Library __exit(1),Rdummy

# Check Array Allocation Is Not With Negative Number:
# static void checkSize(size n) {
# 	if (n<0) Library.println("Runtime Error");
# }
__checkSize:
	Move n, R0
	Compare 0, R0
	JumpLE _error3
	Return Rdummy
_error3:
	Library __println(str_err_neg_arr_size),Rdummy
	Library __exit(1),Rdummy

# Check Division By Zero:
# static void checkZero(value b) {
# 	if (b == 0) Library.println("Runtime Error");
# }
__checkZero:
	Move b, R0
	Compare 0, R0	JumpTrue _error4
	Return Rdummy
_error4:
	Library __println(str_err_div_by_zero),Rdummy
	Library __exit(1),Rdummy


_ic_main:
Library __allocateObject(4), R0
MoveField _DV_ReturnCheck, R0.0
Move R0, rc
Move rc, R1
StaticCall __checkNullRef(a=R1),Rdummy
VirtualCall R1.0(), Rdummy
Library __exit(0),Rdummy

_ReturnCheck_checkRetFuncs:
Move this, R1
VirtualCall R1.1(), Rdummy
Move this, R1
VirtualCall R1.2(), R0
Move this, R1
VirtualCall R1.3(), R0
Move this, R1
VirtualCall R1.4(), R0
Move this, R1
VirtualCall R1.5(), R0
Move this, R1
VirtualCall R1.6(), R0
Move this, R1
VirtualCall R1.7(), R0
Move this, R1
VirtualCall R1.8(), R0
Move this, R1
VirtualCall R1.9(), R0
Move this, R1
VirtualCall R1.10(), R0
Move this, R1
VirtualCall R1.11(), R0
Move this, R1
VirtualCall R1.12(), R0
Move this, R1
VirtualCall R1.13(), R0
Return Rdummy

_ReturnCheck_retvoid:
Return Rdummy
Return Rdummy

_ReturnCheck_retvobj:
Library __allocateObject(4), R0
MoveField _DV_C, R0.0
Move R0, c
Move c, R0
Return R0

_ReturnCheck_retArr:
Move 2, R1
StaticCall __checkSize(n=R1),Rdummy
Mul 4, R1
Library __allocateArray(R1), R0
Move R0, c
Move c, R0
Return R0

_ReturnCheck_retArrLocation:
Move 0, R1
StaticCall __checkSize(n=R1),Rdummy
Mul 4, R1
Library __allocateArray(R1), R0
Move R0, c
Library __allocateObject(4), R0
MoveField _DV_C, R0.0
Move c, R1
StaticCall __checkNullRef(a=R1),Rdummy
Move 0, R2
StaticCall __checkArrayAccess(a=R1, i=R2),Rdummy
MoveArray R0, R1[R2]
Move c, R1
StaticCall __checkNullRef(a=R1),Rdummy
Move 1, R2
StaticCall __checkArrayAccess(a=R1, i=R2),Rdummy
MoveArray R1[R2], R0
Return R0

_ReturnCheck_retThis:
Library __allocateObject(4), R1
MoveField _DV_C, R1.0
StaticCall __checkNullRef(a=R1),Rdummy
VirtualCall R1.0(), R0
Return R0

_ReturnCheck_retNewObjThis:
Library __allocateObject(4), R1
MoveField _DV_C, R1.0
StaticCall __checkNullRef(a=R1),Rdummy
VirtualCall R1.0(), R0
Return R0

_ReturnCheck_retNewObj:
Library __allocateObject(4), R0
MoveField _DV_C, R0.0
Return R0

_ReturnCheck_retNewArr:
Move 34, R1
StaticCall __checkSize(n=R1),Rdummy
Mul 4, R1
Library __allocateArray(R1), R0
Return R0

_ReturnCheck_retArrLength:
Move 2, R1
StaticCall __checkSize(n=R1),Rdummy
Mul 4, R1
Library __allocateArray(R1), R0
Move R0, arr
Move arr, R1
StaticCall __checkNullRef(a=R1),Rdummy
ArrayLength R1, R0
Return R0

_ReturnCheck_retNegation:
Move 1, R0
Move R0, a
Move a, R0
Xor 1,R0
Return R0

_ReturnCheck_retNegative:
Move 1, R0
Move R0, a
Move a, R0
Neg R0
Return R0

_ReturnCheck_retNull:
Move 0, R0
Return R0

_ReturnCheck_retIntCalling:
Move 6, R0
Return R0

_C_retThis:
Move this, R0
Return R0
