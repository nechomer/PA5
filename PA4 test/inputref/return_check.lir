re_null_ref_str:    "Runtime Error: Null pointer dereference!"
re_array_index_str: "Runtime Error: Array index out of bounds!"
re_array_alloc_str: "Runtime Error: Array allocation with non-positive array size!"
re_zero_div_str:    "Runtime Error: Division by zero!"

# class ReturnCheck
# Dispatch vector:
_DV_ReturnCheck: [_ReturnCheck_checkRetFuncs, _ReturnCheck_retvoid, _ReturnCheck_retvobj, _ReturnCheck_retArr, _ReturnCheck_retArrLocation, _ReturnCheck_retThis, _ReturnCheck_retNewObjThis, _ReturnCheck_retNewObj, _ReturnCheck_retNewArr, _ReturnCheck_retArrLength, _ReturnCheck_retNegation, _ReturnCheck_retNegative, _ReturnCheck_retNull, _ReturnCheck_retIntCalling]
# Field offsets

# class C
# Dispatch vector:
_DV_C: [_C_retThis]
# Field offsets


__checkNullRef:
	# a is a reference
	Move a, R0
	Compare 0, R0
	JumpTrue _rc_error_label1
	Return Rdummy
_rc_error_label1:
	Library __println(re_null_ref_str),Rdummy
	Library __exit(1),Rdummy

__checkArrayAccess:
	# a is an arry
	# i is an index register
	ArrayLength a, R0
	Compare i, R0
	JumpLE _rc_error_label2
	Move i, R0
	Compare 0, R0
	JumpL _rc_error_label2
	Return Rdummy
_rc_error_label2:
	Library __println(re_array_index_str),Rdummy
	Library __exit(1),Rdummy

__checkSize:
	# n is an array length
	Move n, R0
	Compare 0, R0
	JumpLE _rc_error_label3
	Return Rdummy
_rc_error_label3:
	Library __println(re_array_alloc_str),Rdummy
	Library __exit(1),Rdummy

__checkZero:
	# x is a value that should no be zero
	Move x, R0
	Compare 0, R0
	JumpTrue _rc_error_label4
	Return Rdummy
_rc_error_label4:
	Library __println(re_zero_div_str),Rdummy
	Library __exit(1),Rdummy


_ic_main:
Library __allocateObject(4), R0
MoveField _DV_ReturnCheck, R0.0
Move R0, rc_32
Move rc_32, R1
StaticCall __checkNullRef(a=R1),Rdummy
VirtualCall R1.0(), Rdummy
Library __exit(0),Rdummy

_ReturnCheck_checkRetFuncs:
Move this, R1
VirtualCall R1.1(), Rdummy
Move this, R1
VirtualCall R1.2(), R0
Move this, R1
VirtualCall R1.3(), R0
Move this, R1
VirtualCall R1.4(), R0
Move this, R1
VirtualCall R1.5(), R0
Move this, R1
VirtualCall R1.6(), R0
Move this, R1
VirtualCall R1.7(), R0
Move this, R1
VirtualCall R1.8(), R0
Move this, R1
VirtualCall R1.9(), R0
Move this, R1
VirtualCall R1.10(), R0
Move this, R1
VirtualCall R1.11(), R0
Move this, R1
VirtualCall R1.12(), R0
Move this, R1
VirtualCall R1.13(), R0
Return Rdummy

_ReturnCheck_retvoid:
Return Rdummy
Return Rdummy

_ReturnCheck_retvobj:
Library __allocateObject(4), R0
MoveField _DV_C, R0.0
Move R0, c_33
Move c_33, R0
Return R0

_ReturnCheck_retArr:
Move 2, R1
StaticCall __checkSize(n=R1),Rdummy
Mul 4, R1
Library __allocateArray(R1), R0
Move R0, c_34
Move c_34, R0
Return R0

_ReturnCheck_retArrLocation:
Move 0, R1
StaticCall __checkSize(n=R1),Rdummy
Mul 4, R1
Library __allocateArray(R1), R0
Move R0, c_35
Library __allocateObject(4), R0
MoveField _DV_C, R0.0
Move c_35, R1
StaticCall __checkNullRef(a=R1),Rdummy
Move 0, R2
StaticCall __checkArrayAccess(a=R1, i=R2),Rdummy
MoveArray R0, R1[R2]
Move c_35, R1
StaticCall __checkNullRef(a=R1),Rdummy
Move 1, R2
StaticCall __checkArrayAccess(a=R1, i=R2),Rdummy
MoveArray R1[R2], R0
Return R0

_ReturnCheck_retThis:
Library __allocateObject(4), R1
MoveField _DV_C, R1.0
StaticCall __checkNullRef(a=R1),Rdummy
VirtualCall R1.0(), R0
Return R0

_ReturnCheck_retNewObjThis:
Library __allocateObject(4), R1
MoveField _DV_C, R1.0
StaticCall __checkNullRef(a=R1),Rdummy
VirtualCall R1.0(), R0
Return R0

_ReturnCheck_retNewObj:
Library __allocateObject(4), R0
MoveField _DV_C, R0.0
Return R0

_ReturnCheck_retNewArr:
Move 34, R1
StaticCall __checkSize(n=R1),Rdummy
Mul 4, R1
Library __allocateArray(R1), R0
Return R0

_ReturnCheck_retArrLength:
Move 2, R1
StaticCall __checkSize(n=R1),Rdummy
Mul 4, R1
Library __allocateArray(R1), R0
Move R0, arr_36
Move arr_36, R1
StaticCall __checkNullRef(a=R1),Rdummy
ArrayLength R1, R0
Return R0

_ReturnCheck_retNegation:
Move 1, R0
Move R0, a_37
Move a_37, R0
Xor 1,R0
Return R0

_ReturnCheck_retNegative:
Move 1, R0
Move R0, a_38
Move a_38, R0
Neg R0
Return R0

_ReturnCheck_retNull:
Move 0, R0
Return R0

_ReturnCheck_retIntCalling:
Move 6, R0
Return R0

_C_retThis:
Move this, R0
Return R0
