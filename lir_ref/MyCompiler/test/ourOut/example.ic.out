Parsed ..\test\libic.sig successfully!
Parsed ..\test\Legal\example.ic successfully!

Global Symbol Table: ..\test\Legal\example.ic
	Class: Foo
	Class: Bar
Children tables: Foo, Library

Class Symbol Table: Foo
	Field: int x
	Field: int y
	Static method: main {string[] -> void}
	Virtual method: rise {int -> int}
	Virtual method: shine {int -> int}
Children tables: Bar, rise, shine, main

Class Symbol Table: Library
	Static method: println {string -> void}
	Static method: print {string -> void}
	Static method: printi {int -> void}
	Static method: printb {boolean -> void}
	Static method: readi { -> int}
	Static method: readln { -> string}
	Static method: eof { -> boolean}
	Static method: stoi {string, int -> int}
	Static method: itos {int -> string}
	Static method: stoa {string -> int[]}
	Static method: atos {int[] -> string}
	Static method: random {int -> int}
	Static method: time { -> int}
	Static method: exit {int -> int}

Class Symbol Table: Bar
	Field: int z
	Virtual method: rise {int -> int}
	Virtual method: twinkle {int -> int}
Children tables: rise, twinkle

Method Symbol Table: rise
	Parameter: int x

Method Symbol Table: shine
	Parameter: int x

Method Symbol Table: main
	Parameter: string[] args
	Local variable: Foo f
	Local variable: Bar b

Method Symbol Table: rise
	Parameter: int x

Method Symbol Table: twinkle
	Parameter: int x

Type Table: ..\test\Legal\example.ic
	1: Primitive type: int
	0: Primitive type: boolean
	4: Primitive type: null
	2: Primitive type: string
	3: Primitive type: void
	5: Class: Foo
	6: Class: Bar, Superclass ID: 5
	9: Array type: string[]
	22: Array type: int[]
	7: Method type: {int -> int}
	10: Method type: {string[] -> void}
	13: Method type: {string -> void}
	15: Method type: {int -> void}
	16: Method type: {boolean -> void}
	17: Method type: { -> int}
	18: Method type: { -> string}
	19: Method type: { -> boolean}
	20: Method type: {string, int -> int}
	21: Method type: {int -> string}
	23: Method type: {string -> int[]}
	25: Method type: {int[] -> string}

